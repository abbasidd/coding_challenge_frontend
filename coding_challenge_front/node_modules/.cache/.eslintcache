[{"X:\\coding_challenge\\coding_challenge_front\\src\\index.js":"1","X:\\coding_challenge\\coding_challenge_front\\src\\App.js":"2","X:\\coding_challenge\\coding_challenge_front\\src\\reportWebVitals.js":"3","X:\\coding_challenge\\coding_challenge_front\\src\\table.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":5557,"mtime":1629552319359,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1952,"mtime":1629544389965,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"17ge7bd",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"X:\\coding_challenge\\coding_challenge_front\\src\\index.js",[],["21","22"],"X:\\coding_challenge\\coding_challenge_front\\src\\App.js",["23","24","25","26","27","28","29","30","31","32","33","34"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { List } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from \"axios\";\nimport Select from '@material-ui/core/Select';\nimport BasicTable from './table'\nconst useStyles = makeStyles({\n \n  root: {\n    formControl: {\n      margin: 1,\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: 2,\n    },\n    '& > *': {\n      margin: '1',\n      width: '25ch',\n    },\n    minWidth: 275,\n    margin:'auto',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst mouse_ws = new WebSocket(\"ws://127.0.0.1:8000/ws/deposit/1/\")\nexport default function OutlinedCard() {\n  const [loading,setLoading] = useState(false) \n  mouse_ws.onopen = () => {\n    mouse_ws.send(JSON.stringify({ 'user_id': 1, 'amount': 30.3, 'currency': 'ETH' ,'action':'get'}))\n    setLoading(true);}\n  const [deposits,setDeposits] = useState([]) \n  mouse_ws.onmessage = (evt) => {\n    var received_msg = JSON.parse(evt.data);\n    console.log(received_msg,'gshsghsghsghsgh')\n    setDeposits(received_msg.deposits);\n    // console.log(deposits);\n    // evt.target.value\n    // console.log(document.getElementById('select').innerHTML) \n  }\n  ;\n  var tab_data = [];\n  useEffect(()=>{\n    axios.get('http://127.0.0.1:8000/api/get-deposit/1/').then((response)=>{\n      tab_data = response.data;\n      // setLoading(true);\n      // console.log(deposits);\n    });\n    if (loading){\nconsole.log('starrrrrrttttttt');\n      setTimeout(\n    mouse_ws.send(JSON.stringify({ 'user_id': 1, 'amount': 30.3, 'currency': 'ETH' ,'action':'get'})),9000)\n\n  }  //   tab_data = deposits.map((item)=>{\n  //     return (\n  //   <Typography variant=\"h5\" key={item.id} component=\"h2\">\n  //   {item.amount} <b>::</b> nev\n  // </Typography>)\n    // });\n  },[])\n  const classes = useStyles();\n  const [amount,setAmount] = useState() \n  const [currentCurrency,setCurrentCurrency] = useState() \n  const [currency,setCurrency] = useState(['ETH','BTC','USD'])\n  const post_deposit= ()=>{\n    var data = new FormData();\n    data.append('amount', amount );\n    data.append('currency', currentCurrency);\n    data.append('user_id', 1);\n    \n    var config = {\n      method: 'post',\n      url: 'http://127.0.0.1:8000/api/deposit/',\n      data : data\n    };\n    \n    axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n      console.log(error);\n    });}\n\n\n  const handleChangeS = (evt)=>{\n    setCurrentCurrency(evt.target.value);\n  }\n  if (loading){\n\n    setTimeout(\n      mouse_ws.send(JSON.stringify({ 'user_id': 1, 'amount': 30.3, 'currency': 'ETH' ,'action':'get'})),20000)\n  }\n  \n  const handleChangeA = (evt)=>{\n    setAmount(evt.target.value);\n    mouse_ws.send(JSON.stringify({ 'user_id': 1, 'amount': 30.3, 'currency': 'ETH' ,'action':'get'}));\n    console.log(amount);\n  }\n\n// if (loading)\n// {mouse_ws.send(JSON.stringify({ 'user_id': 1, 'amount': 30.3, 'currency': 'ETH' ,'action':'get'}))\n//}\n\n\nconst i=0\n  let cur =deposits.length>0&& deposits.map((item)=>{\n    // currency = deposits[0]['currency']\n    return (\n  <Typography variant=\"h5\" key={item} component=\"h2\">\n  {item.amount} <b>::</b> nev\n</Typography>)\n})\n  // const [btc,setEth] = useState(123)\n  // const [eth,setEth] = useState(123)\n  const bull = <span className={classes.bullet}>â€¢</span>;\n   // mouse_ws.test();\n  return (\n    console.log(deposits,\"GAGAG\"),\n    <div className={classes.root}>\n {/* <Typography variant=\"h5\" component=\"h2\">\n    {deposits[0]['currency']} <b>::</b> nev\n  </Typography> */}\n  \n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        {deposits.length>0&&deposits.map(val=>{console.log(val);\n    return<Typography key = {val.id}>{val.currency} : {val.amount}</Typography>})}\n      </CardContent>\n     <form className={classes.root} noValidate autoComplete=\"off\">\n     <FormControl required className={classes.formControl}>\n      {/* <CardActions> */}\n     <TextField className={classes.root} onKeyUp={handleChangeA} id=\"standard-basic\" label=\"Buy\" />\n      {/* </CardActions> */}\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"select\"\n          value={currentCurrency}\n          onChange={handleChangeS}\n          // className={classes.selectEmpty}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem id = 'etc' value={\"ETH\"}>ETH</MenuItem>\n          <MenuItem id = 'btc' value={\"BTC\"}>BTC</MenuItem>\n          <MenuItem id = 'usd' value={\"USD\"}>USD</MenuItem>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n    <Button onClick={post_deposit} className={classes.root}>BUY</Button>\n      </FormControl>\n\n   </form>\n    </Card>\n    {/* {loading &&\n    <BasicTable setLoading={setLoading} deposits={deposits}/>\n    } */}\n    </div>\n );\n}","X:\\coding_challenge\\coding_challenge_front\\src\\reportWebVitals.js",[],"X:\\coding_challenge\\coding_challenge_front\\src\\table.js",["35"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function BasicTable(deposits, setLoading) {\r\n    // setLoading(true);\r\n  const classes = useStyles();\r\n  console.log(deposits);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"deposit\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>currency</TableCell>\r\n            <TableCell align=\"right\">Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {deposits.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.amount}\r\n              </TableCell>\r\n              {/* <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":9,"column":10,"nodeType":"42","messageId":"43","endLine":9,"endColumn":14},{"ruleId":"40","severity":1,"message":"45","line":10,"column":8,"nodeType":"42","messageId":"43","endLine":10,"endColumn":18},{"ruleId":"40","severity":1,"message":"46","line":16,"column":8,"nodeType":"42","messageId":"43","endLine":16,"endColumn":18},{"ruleId":"40","severity":1,"message":"47","line":63,"column":7,"nodeType":"42","messageId":"43","endLine":63,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":66,"column":18,"nodeType":"50","endLine":66,"endColumn":31},{"ruleId":"40","severity":1,"message":"51","line":85,"column":10,"nodeType":"42","messageId":"43","endLine":85,"endColumn":18},{"ruleId":"40","severity":1,"message":"52","line":85,"column":19,"nodeType":"42","messageId":"43","endLine":85,"endColumn":30},{"ruleId":"40","severity":1,"message":"53","line":127,"column":7,"nodeType":"42","messageId":"43","endLine":127,"endColumn":8},{"ruleId":"40","severity":1,"message":"54","line":128,"column":7,"nodeType":"42","messageId":"43","endLine":128,"endColumn":10},{"ruleId":"40","severity":1,"message":"55","line":137,"column":9,"nodeType":"42","messageId":"43","endLine":137,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":140,"column":34,"nodeType":"58","messageId":"59","endLine":140,"endColumn":35},{"ruleId":"40","severity":1,"message":"60","line":21,"column":7,"nodeType":"42","messageId":"43","endLine":21,"endColumn":11},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'InputLabel' is defined but never used.","'BasicTable' is defined but never used.","'tab_data' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tab_data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'currency' is assigned a value but never used.","'setCurrency' is assigned a value but never used.","'i' is assigned a value but never used.","'cur' is assigned a value but never used.","'bull' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'rows' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]